#! /usr/bin/env python

from rospy import Subscriber, Publisher
from robot_control.msg import WheelSpeeds
from deedee_driver.motors_driver_lib import *

class MotorsDriverNode:
    def __init__(self):
        rospy.init_node("motors_driver")
        rospy.sleep(0.5)

        # Variables
        self.p = None
        self.initialized = False

        # Retrieve the configs and initialize the controller
        try:
            self.get_config()
            self.controller = Controller(self.robot_name,
                                         self.controller_config)
            self.initialized = True
        except KeyError as e:
            rospy.logerr("Missing config: {}".format(e))

        # Publisher/subscriber
        self.wheel_speeds_sub = Subscriber("wheel_speeds_cmd",
                                           WheelSpeeds,
                                           self.on_wheel_speeds)
        if self.initialized:
            rospy.spin()
        else:
            rospy.loginfo("Missing configs, shutting down MotorsDriver node")

    def get_config(self):
        ns = rospy.get_namespace()
        self.robot_name = ns.strip("/")
        self.controller_config = rospy.get_param(ns+"motors_driver")

    def on_wheel_speeds(self, speeds):
        self.send_speeds(speeds.left, speeds.right)


if __name__=="__main__":
    c = MotorsDriverNode()

